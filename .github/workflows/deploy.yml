name: Deploy to Hostinger

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.2"
          extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, dom, filter, gd, iconv, json, mbstring, pdo, session, tokenizer, xml, zip, fileinfo, curl, openssl
          coverage: none

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install Composer dependencies
        run: composer install --no-dev --optimize-autoloader

      - name: Install Node.js dependencies
        run: npm ci

      - name: Build frontend assets
        run: npm run build

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.HOSTINGER_SSH_KEY }}

      - name: Add Hostinger to known hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.HOSTINGER_HOST }} -p ${{ secrets.HOSTINGER_PORT }} >> ~/.ssh/known_hosts

      - name: Deploy to Hostinger
        run: |
          rsync -avz --delete -e "ssh -p ${{ secrets.HOSTINGER_PORT }}" \
            --exclude='.git' \
            --exclude='node_modules' \
            --exclude='vendor' \
            --exclude='storage/logs' \
            --exclude='storage/framework/cache' \
            --exclude='storage/framework/sessions' \
            --exclude='storage/framework/views' \
            --exclude='.env' \
            --exclude='.github' \
            --exclude='tests' \
            --exclude='phpunit.xml' \
            --exclude='README.md' \
            --exclude='deploy.sh' \
            ./ ${{ secrets.HOSTINGER_USER }}@${{ secrets.HOSTINGER_HOST }}:${{ secrets.HOSTINGER_PATH }}/

      - name: Run deployment commands on server
        run: |
          ssh -p ${{ secrets.HOSTINGER_PORT }} ${{ secrets.HOSTINGER_USER }}@${{ secrets.HOSTINGER_HOST }} << 'EOF'
            cd ${{ secrets.HOSTINGER_PATH }}
            
            # Install/update Composer dependencies
            composer install --no-dev --optimize-autoloader
            
            # Install/update Node.js dependencies and build assets
            npm ci
            npm run build
            
            # Run Laravel commands
            php artisan migrate --force
            php artisan storage:link
            php artisan config:cache
            php artisan route:cache
            php artisan view:cache
            
            # Set proper permissions
            chmod -R 755 storage bootstrap/cache
            chmod -R 755 public/build
            
            echo "Deployment completed successfully!"
          EOF
